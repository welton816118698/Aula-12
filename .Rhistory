x<-10
y<-20
x+y
e de acordo com mÃ©dia e desvio padrÃ£o atriobuiÃ§Ã£o no comando.
#Exemplo: rnorm(100,50,2): gera 100 valores com distribuiÃ§Ã£o normal, cuja mÃ©dia dos valores Ã© 50 e desvio padrÃ£o Ã© 2.
#runif (n, min, max): gera n valores distribuidos uniformemente com valor mÃ­nimo e mÃ¡ximos atriobuidos no comando.
#Exemplo:runif(1000,4000,5000): gera 1000 valores entre 4000 e 5000 com distribuiÃ§Ã£o uniforme
#round (x, digits=n) : arredonda o valor x para n digitos depois do zero.
rm()                                       #apaga objetos.
rm(list = "x""y")                          #apaga mais de um objeto
rm(list=ls())                              #apaga tudo
x <- rnorm(10, mean = 10, sd=2)            #valores aleatorios, media, desvio padrÃ£o
install.packages()                         #instalar pacotes
library()                                  #rodar pacotes
data(pwt8.0)
View(pwt8.0)
install.packages(pwt8)                         #instalar pacotes
install.packages(pwt8)
library(pwt8)
install.packages(pwt8.0)                         #instalar pacotes
ts(br,start=1950,frequency=1)
write.csv(br,file="brcsv")
rm(list=ls)
rm(list = ls())          #Removendo todos objetos do ambiente
br <- subset(pwt8.0, country=="Brazil", select = c("rgdpna","avh","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (paÃƒ­s) igual a "Brazil", selecionando as colunas cujas variÃƒÂ¡veis sÃƒÂ£o "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÃƒÂ‚MBIO)
View(br)
write.csv(br,file="brcsv")
hist(PIB)
hist(rgdpna)
plot(dados, col=c("blue","red","green"), main="Dados Barsileiros", xlab="Ano", plot.type = "single")
write.csv(br,file = "br.csv")                 #Grava os dados da tabela br no arquivo br.csv
plot(dados, col=c("blue","red","green"), main="Dados Barsileiros", xlab="Ano", plot.type = "single")   #Cria um ÃƒÂºnico grÃƒÂ¡fico com as trÃƒÂªs sÃƒÂ©ries juntas, com linhas azuis para  PIB, vermelha para trabalho e verde para o cÃƒÂ¢mbio
write.csv(br,file = "br.csv")
rm(list = ls())          #Removendo todos objetos do ambiente
getwd()                  #Verificando o diretÃ³rio atual
setwd("c:/Econometria")  # Aleterando o diretÃ³rio caso seja necessÃ¡rio, para ("c:/EconometriaA") ou "c:/Econometria")
library("readr")                               #Carrega o pacote de leitura de arquivos .csv
br <- read.csv("c:/EconometriaA/br.csv")       #LÃª o arquivo br.csv de acordo com o caminho especificado
view(br)                                       #Exibe o objeto "br", criado a partir do arquivo "br.csv"
br <- br[,-1]                                  #Apaga a primeira coluna
colnames(br)[3] <- "Cambio"                    #Renomeia a terceira coluna do objteo "br" para Cambio
PIB <- ts(br$PIB, start = 1950, frequency = 1)   #Cria uma sÃ©rie temporal somente com dados do PIB
plot(PIB)                                        #Cria grÃ¡fico do PIB
hist(PIB)                                        #cria um histograma (grÃ¡fico em barras com a frequencia no eixo Y e os valores assumidos pela variÃ¡vel no eixo x)
Trabalho <- ts(br$Trabalho, start = 1950, frequency = 1)    #Cria uma sÃ©rie temporal somente com dados do Trabalho
plot(Trabalho)                                              #Cria grÃ¡fico do Trabalho
hist(Trabalho)                                              #Cria histograma do Trabalho
Cambio <- ts(br$Cambio, start = 1950, frequency = 1)    #Cria uma sÃ©rie temporal somente com dados do Cambio
plot(Cambio)                                            #Cria grÃ¡fico do Cambio
hist(Cambio)
getwd()                  #Verificando o diretÃ³rio atual
setwd("c:/Econometria")  # Aleterando o diretÃ³rio caso seja necessÃ¡rio, para ("c:/EconometriaA") ou "c:/Econometria")
library("readr")                               #Carrega o pacote de leitura de arquivos .csv
br <- read.csv("c:/EconometriaA/br.csv")       #LÃª o arquivo br.csv de acordo com o caminho especificado
view(br)                                       #Exibe o objeto "br", criado a partir do arquivo "br.csv"
br <- br[,-1]                                  #Apaga a primeira coluna
colnames(br)[3] <- "Cambio"                    #Renomeia a terceira coluna do objteo "br" para Cambio
PIB <- ts(br$PIB, start = 1950, frequency = 1)   #Cria uma sÃ©rie temporal somente com dados do PIB
plot(PIB)                                        #Cria grÃ¡fico do PIB
hist(PIB)                                        #cria um histograma (grÃ¡fico em barras com a frequencia no eixo Y e os valores assumidos pela variÃ¡vel no eixo x)
Trabalho <- ts(br$Trabalho, start = 1950, frequency = 1)    #Cria uma sÃ©rie temporal somente com dados do Trabalho
library(readxl)
library(urca)
library(urca)
library(readxl)
library(readxl)      #Carregando o pacote Readxl, que efetua leitura dos arquivos do Excel
library(urca)        #Carregando pacote URCA para teste de estacionariedade
IPCA <- read_excel("C:/Econometria/IPCA.xls", col_types = c("date","numeric"))   #Carregando o arquivo
Inflacao <- ts(IPCA$IPCA,start = 2008-01, frequency = 12)    #Definindo como SÃ©rie Temporal
View(Inflacao)
library(readxl)      #Carregando o pacote Readxl, que efetua leitura dos arquivos do Excel
library(urca)        #Carregando pacote URCA para teste de estacionariedade
IPCA <- read_excel("C:/Econometria/IPCA.xls", col_types = c("date","numeric"))   #Carregando o arquivo
Inflacao <- ts(IPCA$IPCA,start = 2008-01, frequency = 12)    #Definindo como SÃ©rie Temporal
View(Inflacao)
#Teste de Estacionariedade
TesteDF <- summary(ur.df(Inflacao, type="none", lags=0))
TesteDF
#GrÃ¡ficos de AutocorrelaÃ§Ã£o
acf(IPCA$IPCA, main="Inflacao Mensal")   #FAC - FunÃ§Ã£o de AutocorrelaÃ§Ã£o
pacf(IPCA$IPCA, main="Inflacao Mensal")  #FACP-FunÃ§ao de AutocorrelaÃ§Ã£o Parcial
acf(IPCA$IPCA, main="Inflacao Mensal")   #FAC - FunÃ§Ã£o de AutocorrelaÃ§Ã£o
View(TesteDF)
pacf(IPCA$IPCA, main="Inflacao Mensal")  #FACP-FunÃ§ao de AutocorrelaÃ§Ã£o Parcial
#Estimando Modelo Autoregressivo
AR1 <- arima(Inflacao,order = c(1,0,0))  #Modelo Autorregressivo de ordem 1
AR1
AR2 <- arima(Inflacao, order=c(2,0,0))   #Modelo Autorregressivo de ordem 2
AR2
testevgar1$
j
library(readxl)      #Carregando o pacote Readxl, que efetua leitura dos arquivos do Excel
library(urca)
install.packages("urca")
install.packages("urca")
install.packages("readxl")
library(readxl)      #Carregando o pacote Readxl, que efetua leitura dos arquivos do Excel
library(urca)
dataecn <- read_excel("C:/Econometria/dataecn.xls", col_types = c("date","numeric"))   #Carregando o arquivo
dataecn <- read_excel("C:/Econometria/dataecn.xlsx", col_types = c("date","numeric"))   #Carregando o arquivo
dataecn <- read_excel("C:\Econometria/dataecn.xlsx")
dataecn <- read_excel("C:/Econometria/dataecn.xlsx")
View(dataecn)
install.packages("urca")
View(dataecn)
dataecn <- dataecn[,-2]
View(dataecn)
dataecn <- dataecn[,-1]
temporal <- ts(dataecn, start = x, frequency = 365)
temporal <- ts(dataecn, start = '84666.44', frequency = 365)
temporal <- ts(dataecn, start = 84666.44, frequency = 365)
plot(temporal)
plot(IBOVDIA_Trabalhada_$PREGÃƒO)
colnames(temporal) [1] <- "PREGÃƒO"
plot(temporal)
TesteDF_PREGAO_none <- ur.df(temporal, "none", lags = 0)
summary(TesteDF_PREGAO_none)
TesteDF_PREGAO_none <- ur.df(temporal, "none", lags = 0)
TesteDF_none <- ur.df(temporal, "none", lags = 0)
install.packages("urca")
summary(TesteDF_PREGAO_none)
TesteDF_none <- ur.df(temporal, "none", lags = 0)
dataecn <- read_excel("C:/Econometria/dataecn.xlsx")
View(dataecn)
dataecn <- dataecn[,-1]
temporal <- ts(dataecn, start = 84666.44, frequency = 365)
plot(temporal)
colnames(temporal) [1] <- "PREGÃƒO"
dataecn <- dataecn[,-1]
TesteDF_none <- ur.df(temporal, "none", lags = 0)
summary(TesteDF_none)
dataecn <- read_excel("C:/Econometria/dataecn.xlsx")
dataecn <- dataecn[,-1]
colnames(temporal) [2] <- "PREGÃƒO"
colnames (IBOVDIA_Trabalhada_) [1] <- "DATA"
colnames(temporal) [2] <- "PREGÃƒO"
colnames (dataecn) [1] <- "DATA"
temporal <- ts(dataecn, start = 84666.44, frequency = 365)
plot(temporal)
l
library(readxl)
PIB_brasil_evoluï¿½_ï¿½_o <- read_excel("PIB brasil evoluÃ§Ã£o.xlsx")
View(PIB_brasil_evoluï¿½_ï¿½_o)
library(readxl)
PIB_brasil_evoluÃƒï¿½_Ãƒï¿½_o <- read_excel("C:/Econometria/PIB brasil evoluÃ§Ã£o.xlsx",
col_types = c("date", "numeric"))
View(PIB_brasil_evoluÃƒï¿½_Ãƒï¿½_o)
library(readxl)
PIB <- read_excel("C:/Econometria/PIB.xlsx",
col_types = c("numeric", "numeric"))
View(PIB)
plot(PIB)
plot(PIB, type = "l")
l
View(PIB)
View(PIB)
View(PIB)
View(PIB)
library(readxl)
PIB <- read_excel("C:/Econometria/PIB.xlsx",
col_types = c("numeric", "numeric"))
View(PIB)
plot(PIB)
plot(PIB, type = "l")
install.packages("urca")
library("urca")
library(readxl)
interdaay <- read_excel("C:/Econometria/PIB.xlsx",
col_types = c("date", "numeric"))
colnames(interdaay)[2] <- "variacao"
variacao <- ts(interdaay$variacao, start = 1980, frequency = 21)
TesteDF_Variacao_none <- ur.df(variacao, "none",lags = 0)
summary(TesteDF_Variacao_none)
TesteDF_Variacao_drift <- ur.df(variacao, "drift", lags=0)
summary(TesteDF_Variacao_drift)
TesteDF_Variacao_trend <- ur.df(variacao, "trend", lags = 0)
summary(TesteDF_Variacao_trend)
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
install.packages("Hmisc")      #Instala Pacote Hmisc
install.packages("forecast")
library(Hmisc)
library(forecast)
library(readxl)               #Carrega os Pacotes
IPCA.df<-read_excel("c:/Econometria/IPCA.xls")                       #Carrega o arquivo
plot(IPCA.df$IPCA, type = "l")                                       #Cria um grÃ¡fico do arquivo
MM <- data.frame(na.omit(ma(IPCA.df$IPCA,order = 12, centre = T)))   #Cria  uma serie de mÃ©dias mÃ³veis tradicionais omitindo oa NAS de lag(N)=12
ACF(IPCA.df$IPCA)
ACF(IPCA.df$IPCA.df)
pacf(IPCA.df)
ACF(IPCA.df$IPCA.df)
pacf(IPCA.df)
ACF(IPCA$IPCA)
pacf(IPCA)
IPCA.df<-read_excel("c:/Econometria/IPCA.xls")                       #Carrega o arquivo
plot(IPCA.df$IPCA, type = "l")                                       #Cria um grÃ¡fico do arquivo
MM <- data.frame(na.omit(ma(IPCA.df$IPCA,order = 12, centre = T)))   #Cria  uma serie de mÃ©dias mÃ³veis tradicionais omitindo oa NAS de lag(N)=12
a <- (127-nrow(MM))+1                                                #Define um parÃ¢metro a para ponderar as perdas de dados para ponderaÃ§Ã£o da mÃ©dia
IPCA.DF <- as.data.frame(IPCA.df$IPCA[a:127])                        #Define IPCA.DF como uma vetor do mesmo tamanho que o vetor das mÃ©dias mÃ³veis MM
Tabela1 <- cbind(IPCA.DF,MM)                                         #Cria a Tabela de Dados Tabela1
colnames(Tabela1) <- c("IPCA","MÃ©dia MÃ³vel")
View(Tabela1)
Grafico <- ts(Tabela1, start = 2008, frequency = 12)                 #Cria a Serie Temporal "Grafico" mensal iniciando em 2008
View(Grafico)
plot(Grafico, plot.type= "single", col=c("Black","Blue"))            #Cria o grÃ¡fico da sÃ©rie de dados e de mÃ©dias mÃ³veis conjuntamente.
z <- lm(IPCA.df$IPCA~IPCA.df$Ano.MÃªs)                                #Regride os dados em relaÃ§Ã£o ao tempo e verifica a tendÃªncia
abline(z, col="Green")                                               #Coloca a linha de regressÃ£o de tendÃªncia no grÃ¡fico
summary(z)
tabela2 <- as.data.frame(Tabela1$IPCA/Tabela1$`MÃ©dia MÃ³vel`)
plot(tabela2)
Inflacao <- ts(IPCA.df$IPCA, start = 2008, frequency = 12)
decomposicao <- decompose(Inflacao)                                          #DecompÃµe a sÃ©rie em Ciclo, TendÃªncia e Sazonalidade
plot(decompose(Inflacao))
Tendencia <- decomposicao$trend
Sazonalidade <- decomposicao$seasonal
Ciclo <- decomposicao$random
Tab_Dados1 <- data.frame(IPCA.df$IPCA, Ciclo)
View(Tab_Dados1)
plot(Sazonalidade, type="l")
Serie_Tempo1 <- ts(Tab_Dados1, start = 2008, frequency = 12)
plot(Serie_Tempo1, plot.type = "single", col= c("Blue", "Red"))
Tab_Dados2 <- data.frame(IPCA.df$IPCA, Tendencia)
Serie_Tempo2 <- ts(Tab_Dados2, start = 2008, frequency = 12)
plot(Serie_Tempo2, plot.type = "single", col= c("Blue", "Red"))
acf(IPCA.df)
pacf(IPCA.df)
Serie_Tempo1 <- ts(Tab_Dados1, start = 2008, frequency = 12)
plot(Serie_Tempo1, plot.type = "single", col= c("Blue", "Red"))
plot(Grafico, plot.type= "single", col=c("Black","Blue"))            #Cria o grÃ¡fico da sÃ©rie de dados e de mÃ©dias mÃ³veis conjuntamente.
z <- lm(IPCA.df$IPCA~IPCA.df$Ano.MÃªs)                                #Regride os dados em relaÃ§Ã£o ao tempo e verifica a tendÃªncia
abline(z, col="Green")                                               #Coloca a linha de regressÃ£o de tendÃªncia no grÃ¡fico
summary(z)
IPCA.df<-read_excel("c:/Econometria/IPCA.xls")                       #Carrega o arquivo
plot(IPCA.df$IPCA, type = "l")                                       #Cria um grÃ¡fico do arquivo
MM <- data.frame(na.omit(ma(IPCA.df$IPCA,order = 6, centre = T)))   #Cria  uma serie de mÃ©dias mÃ³veis tradicionais omitindo oa NAS de lag(N)=12
a <- (127-nrow(MM))+1                                                #Define um parÃ¢metro a para ponderar as perdas de dados para ponderaÃ§Ã£o da mÃ©dia
IPCA.DF <- as.data.frame(IPCA.df$IPCA[a:127])                        #Define IPCA.DF como uma vetor do mesmo tamanho que o vetor das mÃ©dias mÃ³veis MM
Tabela1 <- cbind(IPCA.DF,MM)                                         #Cria a Tabela de Dados Tabela1
colnames(Tabela1) <- c("IPCA","MÃ©dia MÃ³vel")
View(Tabela1)
Grafico <- ts(Tabela1, start = 2008, frequency = 6)                 #Cria a Serie Temporal "Grafico" mensal iniciando em 2008
plot(Grafico, plot.type= "single", col=c("Black","Blue"))            #Cria o grÃ¡fico da sÃ©rie de dados e de mÃ©dias mÃ³veis conjuntamente.
z <- lm(IPCA.df$IPCA~IPCA.df$Ano.MÃªs)                                #Regride os dados em relaÃ§Ã£o ao tempo e verifica a tendÃªncia
abline(z, col="Green")                                               #Coloca a linha de regressÃ£o de tendÃªncia no grÃ¡fico
summary(z)
tabela2 <- as.data.frame(Tabela1$IPCA/Tabela1$`MÃ©dia MÃ³vel`)
plot(tabela2)
Inflacao <- ts(IPCA.df$IPCA, start = 2008, frequency = 12)
decomposicao <- decompose(Inflacao)                                          #DecompÃµe a sÃ©rie em Ciclo, TendÃªncia e Sazonalidade
plot(decompose(Inflacao))
Tendencia <- decomposicao$trend
Sazonalidade <- decomposicao$seasonal
Ciclo <- decomposicao$random
Tab_Dados1 <- data.frame(IPCA.df$IPCA, Ciclo)
View(Tab_Dados1)
plot(Sazonalidade, type="l")
Serie_Tempo1 <- ts(Tab_Dados1, start = 2008, frequency = 12)
plot(Serie_Tempo1, plot.type = "single", col= c("Blue", "Red"))
Tab_Dados2 <- data.frame(IPCA.df$IPCA, Tendencia)
Serie_Tempo2 <- ts(Tab_Dados2, start = 2008, frequency = 12)
plot(Serie_Tempo2, plot.type = "single", col= c("Blue", "Red"))
decomposicao <- decompose(Inflacao)                                          #DecompÃµe a sÃ©rie em Ciclo, TendÃªncia e Sazonalidade
plot(decompose(Inflacao))
Tendencia <- decomposicao$trend
Sazonalidade <- decomposicao$seasonal
Ciclo <- decomposicao$random
rm(list=ls())
setwd("c:/Econometria")
getwd()
setwd("c:/Econometria/12-Processos-ARIMA-master")
getwd()
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)                                  #Carrega o pacote PWT8.0
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoinÃ­veis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (paÃ­s) igual a "Brazil", selecionando as colunas cujas variÃ¡veis sÃ£o "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÃ‚MBIO)
colnames(br) <-  c("PIB","Emprego","CÃ¢mbio")   #Renomeia as colunas para PIB, Trabalho e CÃ¢mbio
colnames(br) <-  c("PIB","Emprego","CÃ¢mbio")   #Renomeia as colunas para PIB, Trabalho e CÃ¢mbio
View(br)
#Separando as variÃ¡veis
PIB <- br$PIB[45:62]                    #Cria o vetor para variÃ¡vel PIB
EMPREGO <- br$Emprego[45:62]            #Cria o vetor para variÃ¡vel EMPREGO
CAMBIO <- br$CÃ¢mbio[45:62]              #Cria o vetor para variÃ¡vel CAMBIO
Anos <- seq(from=1994, to=2011, by=1)   #Cria um vetor para o tempo em anos de 1994 atÃ© 2011
plot(EMPREGO, type = "l")                            #Cria grÃ¡fico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como SÃ©rie Temporal
plot(emprego, main="Pessoa Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhÃµes",
xlab="Ano")                                      #Cria grÃ¡fico da SÃ©rie Temporal
acf(emprego)                                          #FunÃ§Ã£o de AutocorrelaÃ§Ã£o
pacf(emprego)                                         ##FunÃ§Ã£o de AutocorrelaÃ§Ã£o Parcial
#Analise para o Emprego
plot(CAMBIO, type = "l")
plot(PIB, type = "l")
plot(EMPREGO, type = "l")                            #Cria grÃ¡fico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como SÃ©rie Temporal
plot(emprego, main="Pessoa Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhÃµes",
xlab="Ano")                                      #Cria grÃ¡fico da SÃ©rie Temporal
acf(emprego)                                          #FunÃ§Ã£o de AutocorrelaÃ§Ã£o
pacf(emprego)                                         ##FunÃ§Ã£o de AutocorrelaÃ§Ã£o Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #RegressÃ£o linear simples do emprego em relaÃ§Ã£o ao tempo
reglinEMP                                             #Exibe os resultados da regressÃ£o linear
summary(reglinEMP)
plot(emprego)                                         #GrÃ¡fcio dos dados
abline(reglinEMP, col="Blue")                         #Insere a linha de regressÃ£o linear estimada
residuosEMP <- reglinEMP$residuals                    #Salva os resÃ­duos no vetor residuosEMP
reglinEMPres <- lm(residuosEMP ~ Anos)                #RegressÃ£o linear dos resÃ­duos em funÃ§Ã£o do tempo
plot(residuosEMP,type="l")                            #GrÃ¡fico dos resÃ­duos
abline(reglinEMPres, col="Blue")                      #Insere a linha de regressÃ£o linear dos resÃ­duos
pdemprego <- diff(EMPREGO)                                #Calcula a primeira diferenÃ§a da sÃ©rie de dados
diferenca1 <- (data.frame(EMPREGO[2:18],pdemprego))       #Exibe a tabela da sÃ©rie original coma diferenÃ§a <-
DIFERENCA <- ts(diferenca1, start = 1994, frequency = 1)  #Define serie temporal para a tabela diferenca1
plot(DIFERENCA, plot.type="single", col=c("Black","Green")) #Cria o grafico com as duas series
plot(pdemprego, type="l")                                   #Cria grÂ´pafico somente para a serie da diferenÃ§a
pdemprego1 <- diff(emprego)                                            #Calculando-se a primeira diferenÃ§a
TesteDF_Emprego1_trend <- ur.df(pdemprego1, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego1_trend)
pdemprego2 <- diff(diff(emprego))                                      #Calculando-se a segunda diferenÃ§a
TesteDF_Emprego2_trend <- ur.df(pdemprego2, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego2_trend)
arima123 <- arima(emprego, c(1,2,3))
#ARMA
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima220 <- arima(emprego, c(2,2,0))
arima221 <- arima(emprego, c(2,2,1))
arima222 <- arima(emprego, c(2,2,2))
arima223 <- arima(emprego, c(2,2,3))
#MA
arima021 <- arima(emprego, c(0,2,1))
arima022 <- arima(emprego, c(0,2,2))
arima023 <- arima(emprego, c(0,2,3))
#AR
arima0120
setwd("c:/Econometria/12-Processos-ARIMA-master")
#AR
arima0120 <- arima(emprego, c(0,1,2,0))
#AR
arima0120 <- arima(emprego, c(0,2,0))
#Escolher o melhor modelo com base no menor AIC/BIC
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,rima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
#Escolher o melhor modelo com base no menor AIC/BIC
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <-c(list("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120"))
Resultados <- data.frame(Modelo,AIC,BIC)
#AnÃ¡lise para o CÃ¢mbio
arima120 <- arima(CAMBIO, c(1,2,0))
View(arima120)
PIB
#AnÃ¡lise para o PIB
arima123 <- arima(PIB, c(1,2,3))
#AnÃ¡lise para o PIB
arima123 <- arima(PIB, c(1,2,3))
#ARMA
arima120 <- arima(PIB, c(1,2,0))
arima121 <- arima(PIB, c(1,2,1))
arima122 <- arima(PIB, c(1,2,2))
arima220 <- arima(PIB, c(2,2,0))
arima221 <- arima(PIB, c(2,2,1))
arima222 <- arima(PIB, c(2,2,2))
arima223 <- arima(PIB, c(2,2,3))
#MA
arima021 <- arima(PIB, c(0,2,1))
arima022 <- arima(PIB, c(0,2,2))
arima023 <- arima(PIB, c(0,2,3))
#AR
arima0120 <- arima(PIB, c(0,2,0))
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
estimacoes <- (arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
estimacoes <- (arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
estimacoes <- ("arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120")
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
Modelo <-c(("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120"))
Modelo <-c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120")
Resultados <- data.frame(Modelo,AIC,BIC)
#AnÃ¡lise para o PIB
arima123 <- arima(PIB, c(1,2,3))
#ARMA
arima120 <- arima(PIB, c(1,2,0))
arima121 <- arima(PIB, c(1,2,1))
arima122 <- arima(PIB, c(1,2,2))
arima220 <- arima(PIB, c(2,2,0))
arima221 <- arima(PIB, c(2,2,1))
arima222 <- arima(PIB, c(2,2,2))
arima223 <- arima(PIB, c(2,2,3))
#MA
arima021 <- arima(PIB, c(0,2,1))
arima022 <- arima(PIB, c(0,2,2))
arima023 <- arima(PIB, c(0,2,3))
#AR
arima0120 <- arima(PIB, c(0,2,0))
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <-c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120")
Resultados <- data.frame(Modelo,AIC,BIC)
Resultados <- data.frame(Modelo,AIC,BIC)
View(Resultados)
getwd()
